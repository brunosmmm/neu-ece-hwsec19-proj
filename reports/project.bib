@INPROCEEDINGS{tightLoose,
author={E. G. {Cota} and P. {Mantovani} and G. {Di Guglielmo} and L. P. {Carloni}},
booktitle={2015 52nd ACM/EDAC/IEEE Design Automation Conference (DAC)},
title={An analysis of accelerator coupling in heterogeneous architectures},
year={2015},
volume={},
number={},
pages={1-6},
keywords={DRAM chips;file organisation;microprocessor chips;power aware computing;accelerator coupling analysis;heterogeneous architectures;energy efficiency improvements;on-chip components;high-throughput accelerators;CPU;direct memory access;DMA;out-of-core coupling;DRAM;loosely-coupled accelerators;private memory blocks;LLC;Random access memory;Software;Acceleration;Couplings;Computational modeling;Registers;Bandwidth},
doi={10.1145/2744769.2744794},
ISSN={},
month={June},}
@ARTICLE{TSS,
author={N. {Teimouri} and H. {Tabkhi} and G. {Schirner}},
journal={IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
title={Alleviating Scalability Limitation of Accelerator-Based Platforms},
year={2019},
volume={38},
number={7},
pages={1317-1330},
keywords={embedded systems;microprocessor chips;multiprocessing systems;parallel architectures;power aware computing;synchronisation;alleviating scalability limitation;accelerator-based platforms;accelerator-based chip multiprocessors;application-specific HW accelerators;host processor core;high-performance;power-efficient computing;scalability limitations;shared resources;on-chip memory;ACC communication semantics;general architectures;resources bottlenecks;scalable integration;self-synchronizing accelerators;TSS;identified communication semantics;ACC-to-ACC connections;conventional ACMP architectures;shared architectural resources;ACMP;ACC data access;communication fabric-DMA;ACC performance benefits;ACMPerf;Computer architecture;Scalability;Synchronization;Acceleration;Fabrics;Process control;Semantics;Accelerator (ACC);ACC communication overhead;ACC communication semantics;ACC computation coverage;accelerator-based chip multiprocessors (ACMP);scalability;transparent self-synchronizing accelerators (TSS)},
doi={10.1109/TCAD.2018.2846632},
ISSN={},
month={July},}
@phdthesis{Waterman:EECS-2016-1,
    Author = {Waterman, Andrew},
    Title = {Design of the RISC-V Instruction Set Architecture},
    School = {EECS Department, University of California, Berkeley},
    Year = {2016},
    Month = {Jan},
    URL = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-1.html},
    Number = {UCB/EECS-2016-1},
    Abstract = {The hardware-software interface, embodied in the instruction set architecture (ISA), is arguably the most important interface in a computer system. Yet, in contrast to nearly all other interfaces in a modern computer system, all commercially popular ISAs are proprietary. A free and open ISA standard has the potential to increase innovation in microprocessor design, reduce computer system cost, and, as Mooreâ€™s law wanes, ease the transition to more specialized computational devices.

In this dissertation, I present the RISC-V instruction set architecture. RISC-V is a free and open ISA that, with three decades of hindsight, builds and improves upon the original Reduced Instruction Set Computer (RISC) architectures. It is structured as a small base ISA with a variety of optional extensions. The base ISA is very simple, making RISC-V suitable for research and education, but complete enough to be a suitable ISA for inexpensive, low- power embedded devices. The optional extensions form a more powerful ISA for general- purpose and high-performance computing. I also present and evaluate a new RISC-V ISA extension for reduced code size, which makes RISC-V more compact than all popular 64-bit ISAs.}
}